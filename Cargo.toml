[package]
name = "esp32_file_server"
version = "0.1.0"
authors = ["hammer90"]
edition = "2021"
categories = ["embedded", "hardware-support"]
keywords = ["embedded", "svc", "idf", "esp-idf", "esp32"]
description = "RESTful fileserver demo in RUST for ESP32"
repository = "https://github.com/hammer90/esp32-file-server"
license = "MIT"
readme = "README.md"

[package.metadata.espflash]
partition_table = "partitions.csv"

[patch.crates-io]
smol = { git = "https://github.com/esp-rs-compat/smol" }
polling = { git = "https://github.com/esp-rs-compat/polling" }
socket2 = { git = "https://github.com/esp-rs-compat/socket2" }
getrandom = { version = "0.2", git = "https://github.com/esp-rs-compat/getrandom.git" }
#getrandom1 = { version = "0.1", git = "https://github.com/esp-rs-compat/getrandom.git", package = "getrandom", branch = "0.1" }

[profile.release]
opt-level = "s"

[profile.dev]
debug = true # Symbols are nice and they don't increase the size on Flash
opt-level = "z"

[features]
default = ["experimental"]

# Enable this feature for the build to use the PlatformIO tooling instead of the native ESP-IDF tooling under the hood
pio = ["esp-idf-sys/pio"]

experimental = ["esp-idf-svc/experimental", "esp-idf-hal/experimental", "embedded-svc/experimental"]

[dependencies]
anyhow = {version = "1", features = ["backtrace"]}
log = "0.4"
url = "2"
esp-idf-sys = { version = "0.31", features = ["binstart"] }
esp-idf-svc = "0.40"
esp-idf-hal = "0.36"
embedded-svc = "0.20"
embedded-hal = "0.2"
embedded-graphics = "0.7"
display-interface = "0.4"
display-interface-spi = "0.4"
st7789 = "0.6"
ili9341 = { version = "0.5", git = "https://github.com/yuri91/ili9341-rs" }
ssd1306 = "0.7"
epd-waveshare = "0.5.0"
smol = "1.2"
embeddable_rest_server = { git = "https://github.com/hammer90/embeddable-rest-server" }

[build-dependencies]
embuild = "0.28.2"
anyhow = "1"

# Future; might be possible once https://github.com/rust-lang/cargo/issues/9096 hits Cargo nightly:
#rust-esp32-ulp-blink = { git = "https://github.com/ivmarkov/rust-esp32-ulp-blink", artifact = "bin" }

